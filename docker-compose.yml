version: "3.5"

services:
  bitcoind:
    image: lncm/bitcoind:v0.21.1
    restart: on-failure
    container_name: bitcoind.sphinx
    volumes:
      - ./bitcoind:/data/.bitcoin
    ports:
      - 18443:18443
      - 8333:8333
      - 28332:28332
      - 28333:28333

  alice-lnd:
    image: lightninglabs/lnd:v0.14.3-beta.rc1
    container_name: alice-lnd.sphinx
    volumes:
      - ./lnd/alice/.lnd:/root/.lnd
      - ./lnd/setup:/lndsetup
    ports:
      - 9735:9735
      - 10009:10009
      - 38881:38881
    command: --configfile=/lndsetup/alice.conf

  bob-lnd:
    image: lightninglabs/lnd:v0.14.3-beta.rc1
    container_name: bob-lnd.sphinx
    volumes:
      - ./lnd/bob/.lnd:/root/.lnd
      - ./lnd/setup:/lndsetup
    ports:
      - 9736:9735
      - 10010:10010
      - 38882:38882
    command: --configfile=/lndsetup/bob.conf

  carol-lnd:
    image: lightninglabs/lnd:v0.14.3-beta.rc1
    container_name: carol-lnd.sphinx
    volumes:
      - ./lnd/carol/.lnd:/root/.lnd
      - ./lnd/setup:/lndsetup
    ports:
      - 9737:9735
      - 10011:10011
      - 38883:38883
    command: --configfile=/lndsetup/carol.conf

  lndsetup:
    image: node:12-buster-slim
    depends_on:
      - alice-lnd
      - bob-lnd
      - carol-lnd
    restart: "no"
    entrypoint: ["node", "/lndsetup/index.js"]
    volumes:
      - ./lnd/alice/.lnd:/alice/.lnd
      - ./lnd/bob/.lnd:/bob/.lnd
      - ./lnd/carol/.lnd:/carol/.lnd
      - ./lnd/setup:/lndsetup
      - ./lnd/setup/nodes/nodes.js:/lndsetup/nodes.js

  db:
    image: postgres
    container_name: db.sphinx
    restart: on-failure
    environment:
      - POSTGRES_PASSWORD=sphinx
      - POSTGRES_USER=postgres
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./pgdata:/var/lib/postgresql/data
    ports:
      - 5433:5432

  tribes:
    image: sphinxlightning/sphinx-tribes:latest
    container_name: tribes.sphinx
    restart: on-failure
    depends_on:
      - db
    environment:
      - PORT=13000
      - DATABASE_URL=postgres://postgres:sphinx@db.sphinx:5432/postgres?sslmode=disable
      - LN_SERVER_BASE_URL=http://localhost:13000
    volumes:
      - ./tribes/script.sh:/app/script.sh
    ports:
      - 5002:5002
      - 13007:13007
      - 13000:13000
    entrypoint:
      - "sh"
      - "-c"
      - |
        chmod +x /app/script.sh && source /app/script.sh && /app/sphinx-tribes

  auth:
    image: sphinxlightning/sphinx-auth:latest
    container_name: auth.sphinx
    restart: on-failure
    depends_on:
      - db
    environment:
      - JWT_KEY=19e0bb49bhyuibme
      - HOST=localhost:9090
    ports:
      - 9090:9090

  mqtt:
    image: sphinxlightning/sphinx-mqtt:latest
    container_name: mqtt.sphinx
    restart: on-failure
    depends_on:
      - auth
    ports:
      - 1883:1883

  meme:
    image: bucko/sphinx-meme:latest
    container_name: meme.sphinx
    restart: on-failure
    depends_on:
      - db
    volumes:
      - ./memes:/app/files
    environment:
      - PORT=5555
      - JWT_KEY=19e0bb49bhyuibme
      - STORAGE_MODE=local
      - LOCAL_DIR=app/files
      - LOCAL_ENCRYPTION_KEY=88303a55f5829d9e35936364204bcb007fe330db649902fa1085a7bce3732347
      - HOST=localhost:5555
      - DATABASE_URL=postgres://postgres:sphinx@db.sphinx:5432/postgres?sslmode=disable

  alice:
    # image: sphinx-relay
    image: sphinxlightning/sphinx-relay
    container_name: alice.sphinx
    user: root
    restart: on-failure
    depends_on:
      - alice-lnd
    entrypoint:
      [
        "node",
        "/relay/dist/app.js",
        "--config=/relay/configs/alice.json",
        "--db=/relay/configs/alice-db.json",
      ]
    volumes:
      - ./relay:/relay/configs
      - ./lnd/alice/.lnd:/relay/alice/.lnd
    environment:
      - NODE_ENV=${GITACTION_ENV:-development}
      - PORT=3001
      - TRIBES_HOST=host.docker.internal:13000
      - MEDIA_HOST=localhost:5555
    ports:
      - 3001:3001
    extra_hosts:
      - "host.docker.internal:host-gateway"

  bob:
    # image: sphinx-relay
    image: sphinxlightning/sphinx-relay
    container_name: bob.sphinx
    user: root
    restart: on-failure
    depends_on:
      - bob-lnd
    entrypoint:
      [
        "node",
        "/relay/dist/app.js",
        "--config=/relay/configs/bob.json",
        "--db=/relay/configs/bob-db.json",
      ]
    volumes:
      - ./relay:/relay/configs
      - ./lnd/bob/.lnd:/relay/bob/.lnd
    environment:
      - NODE_ENV=${GITACTION_ENV:-development}
      - PORT=3002
      - TRIBES_HOST=host.docker.internal:13000
      - MEDIA_HOST=localhost:5555
    ports:
      - 3002:3002
    extra_hosts:
      - "host.docker.internal:host-gateway"

  carol:
    # image: sphinx-relay
    image: sphinxlightning/sphinx-relay
    container_name: carol.sphinx
    user: root
    restart: on-failure
    depends_on:
      - carol-lnd
    entrypoint:
      [
        "node",
        "/relay/dist/app.js",
        "--config=/relay/configs/carol.json",
        "--db=/relay/configs/carol-db.json",
      ]
    volumes:
      - ./relay:/relay/configs
      - ./lnd/carol/.lnd:/relay/carol/.lnd
    environment:
      - NODE_ENV=${GITACTION_ENV:-development}
      - PORT=3003
      - TRIBES_HOST=host.docker.internal:13000
      - MEDIA_HOST=localhost:5555
    ports:
      - 3003:3003
    extra_hosts:
      - "host.docker.internal:host-gateway"

  relaysetup:
    image: node:12-buster-slim
    depends_on:
      - alice
      - bob
      - carol
      - lndsetup
      - tribes
    restart: on-failure
    entrypoint: ["node", "/relay/setup/index.js"]
    volumes:
      - ./relay:/relay
      - ./relay/nodes_partial/nodes_partial.json:/relay/nodes_partial.json

  etcd:
    image: "quay.io/coreos/etcd"
    container_name: etcd.sphinx
    profiles:
      - aperture
    environment:
      - ETCD_ADVERTISE_CLIENT_URLS=http://etcd.sphinx:2379
      - ETCD_LISTEN_CLIENT_URLS=http://0.0.0.0:2379
    command: "etcd -name etcd-meme-aperture"

  aperture:
    # image: "lightninglabs/aperture:v0.1.12-beta"
    # hopefully this is a temporary replacement to use the new aperture
    # support for a timeout caveat
    image: "bucko/aperture:timeoutv2"
    container_name: aperture.sphinx
    profiles:
      - aperture
    ports:
      # for now we will have aperture run on the default meme port
      # so that it's easier to use this as a drop in replacement for any existing setups
      - 5555:8081
    volumes:
      - ./aperture:/aperture
      # using alice's lnd node as the backend for aperture
      - ./lnd/alice/.lnd:/lnd
    # want to restart on failure b/c the lightning node needs to be
    # fully operational so that aperture can connect to it and successfully start
    restart: on-failure
    depends_on:
      - etcd
      - alice-lnd
    entrypoint: ["aperture", "--configfile=/aperture/aperture.yaml"]

  # an override service that runs everything in the
  # depends_on list. Comment out to use overrides
  exclude-services:
    image: nginx
    command: echo done
    depends_on:
      - bitcoind
      - alice-lnd
      - bob-lnd
      - carol-lnd
      - lndsetup
      - db
      - tribes
      - auth
      - mqtt
      # - meme
      - alice
      - bob
      - carol
      - relaysetup
      - aperture
      - etcd
    profiles:
      - aperture

  boltwall:
    image: sphinxlightning/sphinx-boltwall
    # image: tobi-boltwall
    container_name: boltwall.sphinx
    restart: on-failure
    depends_on:
      - boltwallsetup
    volumes:
      - ./boltwall/.env:/usr/src/app/.env
    ports:
      - 8444:8444

  boltwallsetup:
    image: node:12-buster-slim
    restart: on-failure
    entrypoint: ["node", "/boltwall/setup/index.js"]
    volumes:
      - ./boltwall:/boltwall
      - ./boltwall/.env:/boltwall/.env
      - ./lnd:/lnd

  nav-fiber:
    image: sphinxlightning/sphinx-nav-fiber
    container_name: nav-fiber.sphinx
    restart: on-failure
    ports:
      - 3000:3000
  
  tribes-setup:
    image: node:12-buster-slim
    restart: on-failure
    entrypoint: ["node", "/tribes/setup/index.js"]
    depends_on:
      - relaysetup
    volumes:
      - ./tribes:/tribes
      - ./tribes/.env:/tribes/.env
      - ./relay:/relay

  jitsi-web:
    extends:
      file: ./jitsi/docker-compose.yml
      service: web
    container_name: jitsi-web.sphinx
    networks:
      meet.jitsi:
    profiles:
      - jitsi

  prosody:
    extends:
      file: ./jitsi/docker-compose.yml
      service: prosody
    container_name: prosody.sphinx
    networks:
      meet.jitsi:
        aliases:
          - ${XMPP_SERVER:-xmpp.meet.jitsi}
    profiles:
      - jitsi


  jicofo:
    extends:
      file: ./jitsi/docker-compose.yml
      service: jicofo
    container_name: jicofo.sphinx
    depends_on:
      - prosody
    networks:
      meet.jitsi:
    profiles:
      - jitsi

  jvb:
    extends:
      file: ./jitsi/docker-compose.yml
      service: jvb
    container_name: jvb.sphinx
    depends_on:
      - prosody
    networks:
      meet.jitsi:
    profiles:
      - jitsi

networks:
  default:
    name: sphinx-stack
  meet.jitsi:

