version: "3"

services:
  bitcoind:
    image: lncm/bitcoind:v25.0
    restart: on-failure
    container_name: bitcoind.sphinx
    volumes:
      - ./bitcoind:/data/.bitcoin
    ports:
      - 18443:18443
      - 8333:8333
      - 28332:28332
      - 28333:28333

  alice-lnd:
    image: lightninglabs/lnd:v0.16.2-beta
    container_name: alice-lnd.sphinx
    volumes:
      - ./lnd/alice/.lnd:/root/.lnd
      - ./lnd/setup:/lndsetup
    ports:
      - 9735:9735
      - 10009:10009
      - 38881:38881
    command: --configfile=/lndsetup/alice.conf

  bob-lnd:
    image: lightninglabs/lnd:v0.16.2-beta
    container_name: bob-lnd.sphinx
    volumes:
      - ./lnd/bob/.lnd:/root/.lnd
      - ./lnd/setup:/lndsetup
    ports:
      - 9736:9735
      - 10010:10010
      - 38882:38882
    command: --configfile=/lndsetup/bob.conf

  carol-lnd:
    image: lightninglabs/lnd:v0.16.2-beta
    container_name: carol-lnd.sphinx
    volumes:
      - ./lnd/carol/.lnd:/root/.lnd
      - ./lnd/setup:/lndsetup
    ports:
      - 9737:9735
      - 10011:10011
      - 38883:38883
    command: --configfile=/lndsetup/carol.conf

  lndsetup:
    image: node:12-buster-slim
    depends_on:
      - alice-lnd
      - bob-lnd
      - carol-lnd
    restart: "no"
    entrypoint: ["node", "/lndsetup/index.js"]
    volumes:
      - ./lnd/alice/.lnd:/alice/.lnd
      - ./lnd/setup:/lndsetup
      - ./lnd/setup/nodes/nodes.js:/lndsetup/nodes.js

  db:
    image: postgres
    container_name: db.sphinx
    restart: on-failure
    environment:
      - POSTGRES_PASSWORD=sphinx
      - POSTGRES_USER=postgres
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./pgdata:/var/lib/postgresql/data
    ports:
      - 5433:5432

  tribes:
    image: sphinxlightning/sphinx-tribes:latest
    container_name: tribes.sphinx
    restart: on-failure
    depends_on:
      - db
    environment:
      - PORT=13000
      - DATABASE_URL=postgres://postgres:sphinx@db.sphinx:5432/postgres?sslmode=disable
      - LN_SERVER_BASE_URL=http://localhost:13000
    volumes:
      - ./tribes/script.sh:/app/script.sh
    ports:
      - 5002:5002
      - 13007:13007
      - 13000:13000
    entrypoint:
      - "sh"
      - "-c"
      - |
        chmod +x /app/script.sh && source /app/script.sh && /app/sphinx-tribes

  auth:
    image: sphinxlightning/sphinx-auth:0.2.3
    container_name: auth.sphinx
    restart: on-failure
    depends_on:
      - db
    environment:
      - JWT_KEY=19e0bb49bhyuibme
      - HOST=localhost:9090
    ports:
      - 9090:9090

  mqtt:
    image: sphinxlightning/sphinx-mqtt:test-2
    container_name: mqtt.sphinx
    restart: on-failure
    depends_on:
      - auth
    ports:
      - 1883:1883

  meme:
    image: sphinxlightning/sphinx-meme:0.2.2
    container_name: meme.sphinx
    restart: on-failure
    depends_on:
      - db
    volumes:
      - ./memes:/app/files
    environment:
      - PORT=5555
      - JWT_KEY=19e0bb49bhyuibme
      - STORAGE_MODE=local
      - LOCAL_DIR=app/files
      - LOCAL_ENCRYPTION_KEY=88303a55f5829d9e35936364204bcb007fe330db649902fa1085a7bce3732347
      - HOST=meme.sphinx:5555
      - DATABASE_URL=postgres://postgres:sphinx@db.sphinx:5432/postgres?sslmode=disable
    ports:
      - 5555:5555

  alice:
    image: sphinxlightning/sphinx-relay
    container_name: alice.sphinx
    user: root
    restart: on-failure
    depends_on:
      - alice-lnd
    entrypoint:
      [
        "node",
        "/relay/dist/app.js",
        "--config=/relay/configs/alice.json",
        "--db=/relay/configs/alice-db.json",
      ]
    volumes:
      - ./relay:/relay/configs
      - ./lnd/alice/.lnd:/relay/alice/.lnd
    environment:
      - NODE_ENV=${GITACTION_ENV:-development}
      - PORT=3001
      - TRIBES_HOST=host.docker.internal:13000
    ports:
      - 3001:3001
    extra_hosts:
      - "host.docker.internal:host-gateway"

  bob:
    image: sphinxlightning/sphinx-relay
    container_name: bob.sphinx
    user: root
    restart: on-failure
    depends_on:
      - bob-lnd
    entrypoint:
      [
        "node",
        "/relay/dist/app.js",
        "--config=/relay/configs/bob.json",
        "--db=/relay/configs/bob-db.json",
      ]
    volumes:
      - ./relay:/relay/configs
      - ./lnd/bob/.lnd:/relay/bob/.lnd
    environment:
      - NODE_ENV=${GITACTION_ENV:-development}
      - PORT=3002
      - TRIBES_HOST=host.docker.internal:13000
    ports:
      - 3002:3002
    extra_hosts:
      - "host.docker.internal:host-gateway"

  carol:
    image: sphinxlightning/sphinx-relay
    container_name: carol.sphinx
    user: root
    restart: on-failure
    depends_on:
      - carol-lnd
    entrypoint:
      [
        "node",
        "/relay/dist/app.js",
        "--config=/relay/configs/carol.json",
        "--db=/relay/configs/carol-db.json",
      ]
    volumes:
      - ./relay:/relay/configs
      - ./lnd/carol/.lnd:/relay/carol/.lnd
    environment:
      - NODE_ENV=${GITACTION_ENV:-development}
      - PORT=3003
      - TRIBES_HOST=host.docker.internal:13000
    ports:
      - 3003:3003
    extra_hosts:
      - "host.docker.internal:host-gateway"


  relaysetup:
    image: node:12-buster-slim
    depends_on:
      - alice
      - bob
      - carol
      - lndsetup
      - tribes
    restart: on-failure
    entrypoint: ["node", "/relay/setup/index.js"]
    volumes:
      - ./relay:/relay
      - ./relay/nodes_partial/nodes_partial.json:/relay/nodes_partial.json

  boltwall:
    image: sphinxlightning/sphinx-boltwall:latest
    container_name: boltwall.sphinx
    restart: on-failure
    depends_on:
      - boltwallsetup
    volumes:
      - ./boltwall/.env:/usr/src/app/.env
    ports:
      - 8444:8444

  tribes-setup:
    image: node:12-buster-slim
    restart: on-failure
    entrypoint: ["node", "/tribes/setup/index.js"]
    depends_on:
      - relaysetup
    volumes:
      - ./tribes:/tribes
      - ./tribes/.env:/tribes/.env
      - ./relay:/relay

  boltwallsetup:
    image: node:12-buster-slim
    restart: on-failure
    entrypoint: ["node", "/boltwall/setup/index.js"]
    volumes:
      - ./boltwall:/boltwall
      - ./boltwall/.env:/boltwall/.env
      - ./lnd:/lnd

  neo4j:
    image: neo4j:4.4.9
    container_name: neo4j.sphinx
    volumes:
      - ./neo4j/data:/data:rw
      - ./neo4j/logs:/logs:rw
      - ./neo4j/plugins:/plugins
      - ./neo4j/tmp/import:/var/lib/neo4j/import
      - ./neo4j/conf:/var/lib/neo4j/conf/
    ports:
      - 7474:7474
      - 7687:7687
    environment:
      - NEO4J_AUTH=neo4j/test
      - NEO4J_USER=neo4j
      - NEO4J_PASS=test
      - NEO4J_apoc_export_file_enabled=true
      - NEO4J_apoc_import_file_enabled=true
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*,algo.*
      - NEO4J_dbms_memory_heap_initial__size=64m
      - NEO4J_dbms_memory_heap_max__size=256m
      - NEO4J_apoc_uuid_enabled=true
      - NEO4J_dbms_default__listen__address=0.0.0.0
      - NEO4J_dbms_connector_bolt_listen__address=0.0.0.0:7687
      - NEO4J_dbms_allow__upgrade=true
      - NEO4J_dbms_default__database=neo4j
      - NEO4JLABS_PLUGINS=["apoc"]
    healthcheck:
      test: [ "CMD", "/var/lib/neo4j/bin/cypher-shell", "-u", "${NEO4J_USER}", "-p", "${NEO4J_PASS}", "MATCH (n) RETURN n LIMIT 1" ]
      interval: 10s
      timeout: 10s
      retries: 20
      
  jarvis-backend:
    image: sphinxlightning/sphinx-jarvis-backend:latest
    container_name: jarvis-backend.sphinx
    restart: on-failure
    volumes:
      - ./stakwork:/stakwork
      - ./temp_images:/temp_images
      - ./.env:/app/.env
    environment:
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASS=test
      - STAKWORK_REQUEST_LOG_PATH=./
      - STAKWORK_ADD_NODE_URL=https://staging.stakwork.com/api/v1/projects
      - STAKWORK_ADD_NODE_TOKEN=${STAKWORK_TOKEN}
      - JARVIS_BACKEND_PORT=5000
      - AWS_ACCESS_KEY_ID=****
      - AWS_SECRET_ACCESS_KEY=****
      - AWS_S3_BUCKET_PATH=https://test.com
      - AWS_S3_REGION_NAME=us-east-1
      - RADAR_RSS_SCHEDULER_TIME_IN_SEC=5090000
      - RADAR_TWITTER_SCHEDULER_TIME_IN_SEC=tue,21,14
      - RADAR_YOUTUBE_SCHEDULER_TIME_IN_SEC=20
      - RADAR_REQUEST_TOKEN=${STAKWORK_TOKEN}
      - RADAR_SCHEDULER_JOB=False
      - RADAR_YOUTUBE_SCHEDULER_JOB=False
      - RADAR_TWITTER_SCHEDULER_JOB=False
      - RADAR_RSS_SCHEDULER_JOB=False
      - RADAR_SCHEDULER_JOB_HOUR=14
      - RADAR_SCHEDULER_JOB_MINUTE=38
      - SECOND_BRAIN_GRAPH_URL=https://knowledge-graph.sphinx.chat/get_named_entities
      - ELASTIC_URI=http://0.0.0.0:9200
      - ELASTIC_PASSWORD=test
      - PUBLIC_GRAPH_RESULT_LIMIT=10
      - STAKWORK_ADD_EPISODE_URL=https://staging.stakwork.com/api/v1/projects
      - RADAR_SCHEDULER_TIME_IN_SEC=5
      - RADAR_TWEET_WEBHOOK=https://stakwork.free.beeceptor.com/stakwork/api/v1/projects/v1/tweet
      - RADAR_TOPIC_WEBHOOK=https://stakwork.free.beeceptor.com/stakwork/api/v1/projects/v1/tweet
      - RADAR_REQUEST_URL=https://staging.stakwork.com/api/v1/projects
      - SELF_GENERATING_GRAPH=1
      - MAX_PAYMENT_HIERARCY_DEPTH=2
      - AUDIO_TAGGING_WORKFLOW_ID=2551
      - SINGLE_AUDIO_OR_VIDEO_EPISODE_WORKFLOW_ID=2552
      - SINGLE_TWEET_WORKFLOW_ID=2553
      - WEBPAGE_TEXT_WORKFLOW_ID=2554
      - DOCUMENT_WORKFLOW_ID=2555
      - TRIBE_MESSAGE_WORKFLOW_ID=2556
      - TWEET_BY_AUTOR_WORKFLOW_ID=2557
      - TWEET_BY_TOPIC_WORKFLOW_ID=2558
      - GITHUB_ISSUE_WORKFLOW_ID=2559
      - YOUTUBE_BY_CHANNEL_WORKFLOW_ID=2550
      - RSS_FEED_WORKFLOW_ID=2561
      - TUTORIAL_GENERATOR_WORKFLOW_ID=2562
      - INSTAGRAPH_GENERATOR_WORKFLOW_ID=2563
      - QUESTION_AND_ANSWER_WORKFLOW_ID=2564
      - TLDR_WORKFLOW_ID=8262
      - TWITTER_BEARER=${TWITTER_BEARER}
      - TLDR_REQUEST_URL=https://staging.stakwork.com/api/v1/projects
    ports:
      - 5000:5000
    links:
      - neo4j
